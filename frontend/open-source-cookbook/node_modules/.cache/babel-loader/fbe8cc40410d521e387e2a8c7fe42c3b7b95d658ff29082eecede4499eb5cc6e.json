{"ast":null,"code":"import axios from 'axios';\nconst API_URL = \"http://localhost:8080\";\nexport const getRecipes = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/recipes`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching message', error);\n    throw error;\n  }\n};\nexport const saveRecipe = async content => {\n  try {\n    const response = await axios.post(`${API_URL}/recipes`, content);\n    return response.data;\n  } catch (error) {\n    console.error('Error saving message', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","getRecipes","response","get","data","error","console","saveRecipe","content","post"],"sources":["/home/vfdizon/dev/open-source-cookbook/frontend/open-source-cookbook/src/services/apiService.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = \"http://localhost:8080\";\n\nexport const getRecipes = async () => {\n    try {\n        const response = await axios.get(`${API_URL}/recipes`);\n        return response.data;\n    } catch (error) {\n        console.error('Error fetching message', error);\n        throw error;\n    }\n};\n\nexport const saveRecipe = async (content) => {\n    try {\n        const response = await axios.post(`${API_URL}/recipes`, content);\n        return response.data;\n    } catch (error) {\n        console.error('Error saving message', error);\n        throw error;\n    }\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,uBAAuB;AAEvC,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EAClC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,UAAU,CAAC;IACtD,OAAOE,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAME,UAAU,GAAG,MAAOC,OAAO,IAAK;EACzC,IAAI;IACA,MAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACU,IAAI,CAAC,GAAGT,OAAO,UAAU,EAAEQ,OAAO,CAAC;IAChE,OAAON,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}